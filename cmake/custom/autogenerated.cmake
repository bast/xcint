include_directories(${PROJECT_BINARY_DIR}/generated)

file(MAKE_DIRECTORY ${PROJECT_BINARY_DIR}/generated)

# generate AO evaluation code
add_custom_command(
    OUTPUT
        ${PROJECT_BINARY_DIR}/generated/autogenerated.h
        ${PROJECT_BINARY_DIR}/generated/autogenerated_0.cpp
        ${PROJECT_BINARY_DIR}/generated/autogenerated_1.cpp
        ${PROJECT_BINARY_DIR}/generated/autogenerated_2.cpp
        ${PROJECT_BINARY_DIR}/generated/autogenerated_3.cpp
        ${PROJECT_BINARY_DIR}/generated/autogenerated_4.cpp
        ${PROJECT_BINARY_DIR}/generated/autogenerated_5.cpp
        ${PROJECT_BINARY_DIR}/generated/parameters.h
        ${PROJECT_BINARY_DIR}/generated/offsets.h
    COMMAND
        ${PYTHON_EXECUTABLE} ${PROJECT_SOURCE_DIR}/src/density/generate.py ${PROJECT_BINARY_DIR}/generated
    WORKING_DIRECTORY
        ${PROJECT_SOURCE_DIR}/src/density
    DEPENDS
        src/density/generate.py
        src/density/cs_trans.py
    )

# generate ave_contributions.h
add_custom_command(
    OUTPUT
        ${PROJECT_BINARY_DIR}/generated/ave_contributions.h
    COMMAND
        ${PYTHON_EXECUTABLE} ${PROJECT_SOURCE_DIR}/src/generate_ave_contributions.py > ${PROJECT_BINARY_DIR}/generated/ave_contributions.h
    DEPENDS
        src/generate_ave_contributions.py
    )
add_custom_target(
    generate_ave
    ALL
    DEPENDS
        ${PROJECT_BINARY_DIR}/generated/ave_contributions.h
    )
